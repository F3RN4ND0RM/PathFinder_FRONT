{"ast":null,"code":"var _jsxFileName = \"D:\\\\6to Semestre\\\\GithubReact\\\\PathFinder_FRONT\\\\reto\\\\src\\\\Pages\\\\Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Header from \"../components/Header\";\nimport CertCard from \"../components/CertCard\";\nimport { useNotifications } from \"../helpers/NotifcationContext\";\nimport \"../Styles/HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [certs, setCerts] = useState([]);\n  const {\n    notifications,\n    addNotifications\n  } = useNotifications();\n\n  // ✅ usamos useCallback para evitar el warning de eslint\n  const fetchCertifications = useCallback(async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error en la solicitud\");\n      }\n      const data = await response.json();\n      const certsData = data.certificationsOfEmployee.map(cert => ({\n        id: cert.id,\n        name: cert.name,\n        description: cert.description,\n        expiration: cert.Certinfo.expiration\n      }));\n      setCerts(certsData);\n      const now = new Date();\n      const expiringSoon = certsData.filter(cert => {\n        const expirationDate = new Date(cert.expiration);\n        const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\n        return diffDays <= 7;\n      });\n      if (expiringSoon.length > 0) {\n        const newNotifs = expiringSoon.map(c => `The certification \"${c.name}\" is expiring soon`);\n        addNotifications(newNotifs);\n      }\n    } catch (error) {\n      console.error(\"Error obteniendo certificaciones:\", error);\n      addNotifications([\"Hubo un error al cargar las certificaciones\"]);\n    }\n  }, [addNotifications]); // ✅ dependencias para useCallback\n\n  // ✅ se usa fetchCertifications como dependencia\n  useEffect(() => {\n    fetchCertifications();\n  }, [fetchCertifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"certifications-title\",\n        children: \"My Certifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"certifications-list\",\n        children: certs.map(cert => /*#__PURE__*/_jsxDEV(CertCard, {\n          name: cert.name,\n          description: cert.description,\n          expiration: cert.expiration\n        }, cert.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"NIKs2xj4nEvo7+3E3nchYWuh62Y=\", false, function () {\n  return [useNotifications];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Navbar","Header","CertCard","useNotifications","jsxDEV","_jsxDEV","HomePage","_s","certs","setCerts","notifications","addNotifications","fetchCertifications","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","certsData","certificationsOfEmployee","map","cert","id","name","description","expiration","Certinfo","now","Date","expiringSoon","filter","expirationDate","diffDays","length","newNotifs","c","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/6to Semestre/GithubReact/PathFinder_FRONT/reto/src/Pages/Homepage.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Header from \"../components/Header\";\r\nimport CertCard from \"../components/CertCard\";\r\nimport { useNotifications } from \"../helpers/NotifcationContext\";\r\nimport \"../Styles/HomePage.css\";\r\n\r\nfunction HomePage() {\r\n  const [certs, setCerts] = useState([]);\r\n  const { notifications, addNotifications } = useNotifications();\r\n\r\n  // ✅ usamos useCallback para evitar el warning de eslint\r\n  const fetchCertifications = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          token: token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error en la solicitud\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const certsData = data.certificationsOfEmployee.map((cert) => ({\r\n        id: cert.id,\r\n        name: cert.name,\r\n        description: cert.description,\r\n        expiration: cert.Certinfo.expiration,\r\n      }));\r\n\r\n      setCerts(certsData);\r\n\r\n      const now = new Date();\r\n      const expiringSoon = certsData.filter((cert) => {\r\n        const expirationDate = new Date(cert.expiration);\r\n        const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\r\n        return diffDays <= 7;\r\n      });\r\n\r\n      if (expiringSoon.length > 0) {\r\n        const newNotifs = expiringSoon.map(\r\n          (c) => `The certification \"${c.name}\" is expiring soon`\r\n        );\r\n        addNotifications(newNotifs);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo certificaciones:\", error);\r\n      addNotifications([\"Hubo un error al cargar las certificaciones\"]);\r\n    }\r\n  }, [addNotifications]); // ✅ dependencias para useCallback\r\n\r\n  // ✅ se usa fetchCertifications como dependencia\r\n  useEffect(() => {\r\n    fetchCertifications();\r\n  }, [fetchCertifications]);\r\n\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <Navbar />\r\n      <div className=\"homepage-content\">\r\n        <Header />\r\n        <h2 className=\"certifications-title\">My Certifications</h2>\r\n        <div className=\"certifications-list\">\r\n          {certs.map((cert) => (\r\n            <CertCard\r\n              key={cert.id}\r\n              name={cert.name}\r\n              description={cert.description}\r\n              expiration={cert.expiration}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}