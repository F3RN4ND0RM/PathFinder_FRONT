{"ast":null,"code":"var _jsxFileName = \"D:\\\\6to Semestre\\\\GithubReact\\\\PathFinder_FRONT\\\\reto\\\\src\\\\Pages\\\\Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Header from \"../components/Header\";\nimport CertificationCard from \"../components/CertificationCard\";\nimport Projects from \"../components/Projects\";\nimport \"../styles/HomePage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [certs, setCerts] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState(localStorage.getItem(\"userName\") || \"Usuario\");\n  useEffect(() => {\n    fetchUserName(); // Obtener el nombre\n    fetchCertifications();\n    fetchProjects();\n  }, []);\n  const fetchUserName = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token\n        }\n      });\n      if (!response.ok) throw new Error(\"Error al obtener el nombre del usuario\");\n      const data = await response.json();\n      if (!data.error && data.name) {\n        localStorage.setItem(\"userName\", data.name);\n        setName(data.name);\n      }\n    } catch (error) {\n      console.error(\"Error obteniendo el nombre de usuario:\", error);\n    }\n  };\n  const fetchCertifications = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (!response.ok) throw new Error(\"Error en la solicitud\");\n      const data = await response.json();\n      const certsData = data.certificationsOfEmployee.map(cert => ({\n        id: cert.id,\n        name: cert.name,\n        description: cert.description,\n        expiration: cert.Certinfo.expiration\n      }));\n      setCerts(certsData);\n      const now = new Date();\n      const expiringSoon = certsData.filter(cert => {\n        const expirationDate = new Date(cert.expiration);\n        const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\n        return diffDays <= 7;\n      });\n      if (expiringSoon.length > 0) {\n        const newNotifs = expiringSoon.map(c => `The certification \"${c.name}\" is expiring soon`);\n        setNotifications(newNotifs);\n      }\n    } catch (error) {\n      console.error(\"Error obteniendo certificaciones:\", error);\n      setNotifications([\"Hubo un error al cargar las certificaciones\"]);\n    }\n  };\n  const fetchProjects = async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const apiUrl = new URL(\"https://pathfinder-back-hnoj.onrender.com/employees/projects\");\n      apiUrl.searchParams.append(\"status\", \"true\"); // Solo proyectos activos\n\n      const response = await fetch(apiUrl.toString(), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error en la solicitud\");\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      const formattedProjects = data.rolesOfEmployee.map(role => {\n        var _role$Assigned;\n        return {\n          id: role.id,\n          name: role.Project.name,\n          platform: role.name,\n          // Rol como \"plataforma\"\n          percentage: (_role$Assigned = role.Assigned) !== null && _role$Assigned !== void 0 && _role$Assigned.status ? 50 : 0,\n          status: role.Project.status\n        };\n      });\n      const activeProjects = formattedProjects.filter(project => project.status);\n      setProjects(activeProjects);\n    } catch (error) {\n      console.error(\"Error obteniendo proyectos:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Welcome, ${name}`,\n      subtitle: \"Check your notifications and active certifications\",\n      notifications: notifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"homepage-container fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Projects, {\n            projects: projects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-3\",\n          children: \"Certifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), certs.map(cert => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(CertificationCard, {\n            name: cert.name,\n            description: cert.description,\n            expiration: cert.expiration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, cert.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"O4lnzxvEzQo+4BRZq0eJivadwLM=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Header","CertificationCard","Projects","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","notifications","setNotifications","certs","setCerts","projects","setProjects","name","setName","localStorage","getItem","fetchUserName","fetchCertifications","fetchProjects","token","response","fetch","method","headers","ok","Error","data","json","error","setItem","console","certsData","certificationsOfEmployee","map","cert","id","description","expiration","Certinfo","now","Date","expiringSoon","filter","expirationDate","diffDays","length","newNotifs","c","apiUrl","URL","searchParams","append","toString","formattedProjects","rolesOfEmployee","role","_role$Assigned","Project","platform","percentage","Assigned","status","activeProjects","project","children","title","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","className","md","_c","$RefreshReg$"],"sources":["D:/6to Semestre/GithubReact/PathFinder_FRONT/reto/src/Pages/Homepage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../components/Header\";\r\nimport CertificationCard from \"../components/CertificationCard\";\r\nimport Projects from \"../components/Projects\";\r\nimport \"../styles/HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [certs, setCerts] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [name, setName] = useState(localStorage.getItem(\"userName\") || \"Usuario\");\r\n\r\n  useEffect(() => {\r\n    fetchUserName(); // Obtener el nombre\r\n    fetchCertifications();\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchUserName = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Error al obtener el nombre del usuario\");\r\n\r\n      const data = await response.json();\r\n      if (!data.error && data.name) {\r\n        localStorage.setItem(\"userName\", data.name);\r\n        setName(data.name);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo el nombre de usuario:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchCertifications = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          token: token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Error en la solicitud\");\r\n\r\n      const data = await response.json();\r\n      const certsData = data.certificationsOfEmployee.map((cert) => ({\r\n        id: cert.id,\r\n        name: cert.name,\r\n        description: cert.description,\r\n        expiration: cert.Certinfo.expiration,\r\n      }));\r\n\r\n      setCerts(certsData);\r\n\r\n      const now = new Date();\r\n      const expiringSoon = certsData.filter((cert) => {\r\n        const expirationDate = new Date(cert.expiration);\r\n        const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\r\n        return diffDays <= 7;\r\n      });\r\n\r\n      if (expiringSoon.length > 0) {\r\n        const newNotifs = expiringSoon.map(\r\n          (c) => `The certification \"${c.name}\" is expiring soon`\r\n        );\r\n        setNotifications(newNotifs);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo certificaciones:\", error);\r\n      setNotifications([\"Hubo un error al cargar las certificaciones\"]);\r\n    }\r\n  };\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      const apiUrl = new URL(\"https://pathfinder-back-hnoj.onrender.com/employees/projects\");\r\n      apiUrl.searchParams.append(\"status\", \"true\"); // Solo proyectos activos\r\n\r\n      const response = await fetch(apiUrl.toString(), {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          token: token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error en la solicitud\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      const formattedProjects = data.rolesOfEmployee.map((role) => ({\r\n        id: role.id,\r\n        name: role.Project.name,\r\n        platform: role.name, // Rol como \"plataforma\"\r\n        percentage: role.Assigned?.status ? 50 : 0,\r\n        status: role.Project.status,\r\n      }));\r\n\r\n      const activeProjects = formattedProjects.filter((project) => project.status);\r\n      setProjects(activeProjects);\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo proyectos:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={`Welcome, ${name}`}\r\n        subtitle=\"Check your notifications and active certifications\"\r\n        notifications={notifications}\r\n      />\r\n\r\n      <Container className=\"homepage-container fade-in\">\r\n        <Row className=\"mt-4\">\r\n          <Col>\r\n            <Projects projects={projects} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mt-4\">\r\n          <h4 className=\"mb-3\">Certifications</h4>\r\n          {certs.map((cert) => (\r\n            <Col key={cert.id} md={6} className=\"mb-3\">\r\n              <CertificationCard\r\n                name={cert.name}\r\n                description={cert.description}\r\n                expiration={cert.expiration}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAACqB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC;EAE/EvB,SAAS,CAAC,MAAM;IACdwB,aAAa,CAAC,CAAC,CAAC,CAAC;IACjBC,mBAAmB,CAAC,CAAC;IACrBC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMG,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;QACnFC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCJ;QACF;MACF,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAE3E,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,IAAI,CAACD,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACd,IAAI,EAAE;QAC5BE,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACd,IAAI,CAAC;QAC3CC,OAAO,CAACa,IAAI,CAACd,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAED,MAAMX,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAME,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,EAAE;QACjGE,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCJ,KAAK,EAAEA;QACT;MACF,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAE1D,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,MAAMI,SAAS,GAAGL,IAAI,CAACM,wBAAwB,CAACC,GAAG,CAAEC,IAAI,KAAM;QAC7DC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXvB,IAAI,EAAEsB,IAAI,CAACtB,IAAI;QACfwB,WAAW,EAAEF,IAAI,CAACE,WAAW;QAC7BC,UAAU,EAAEH,IAAI,CAACI,QAAQ,CAACD;MAC5B,CAAC,CAAC,CAAC;MAEH5B,QAAQ,CAACsB,SAAS,CAAC;MAEnB,MAAMQ,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,YAAY,GAAGV,SAAS,CAACW,MAAM,CAAER,IAAI,IAAK;QAC9C,MAAMS,cAAc,GAAG,IAAIH,IAAI,CAACN,IAAI,CAACG,UAAU,CAAC;QAChD,MAAMO,QAAQ,GAAG,CAACD,cAAc,GAAGJ,GAAG,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC/D,OAAOK,QAAQ,IAAI,CAAC;MACtB,CAAC,CAAC;MAEF,IAAIH,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMC,SAAS,GAAGL,YAAY,CAACR,GAAG,CAC/Bc,CAAC,IAAK,sBAAsBA,CAAC,CAACnC,IAAI,oBACrC,CAAC;QACDL,gBAAgB,CAACuC,SAAS,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzDrB,gBAAgB,CAAC,CAAC,6CAA6C,CAAC,CAAC;IACnE;EACF,CAAC;EAED,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,KAAK,GAAGL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,MAAMiC,MAAM,GAAG,IAAIC,GAAG,CAAC,8DAA8D,CAAC;MACtFD,MAAM,CAACE,YAAY,CAACC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;;MAE9C,MAAM/B,QAAQ,GAAG,MAAMC,KAAK,CAAC2B,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE;QAC9C9B,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCJ,KAAK,EAAEA;QACT;MACF,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACd,MAAM,IAAIH,KAAK,CAACC,IAAI,CAACE,KAAK,CAAC;MAC7B;MAEA,MAAMyB,iBAAiB,GAAG3B,IAAI,CAAC4B,eAAe,CAACrB,GAAG,CAAEsB,IAAI;QAAA,IAAAC,cAAA;QAAA,OAAM;UAC5DrB,EAAE,EAAEoB,IAAI,CAACpB,EAAE;UACXvB,IAAI,EAAE2C,IAAI,CAACE,OAAO,CAAC7C,IAAI;UACvB8C,QAAQ,EAAEH,IAAI,CAAC3C,IAAI;UAAE;UACrB+C,UAAU,EAAE,CAAAH,cAAA,GAAAD,IAAI,CAACK,QAAQ,cAAAJ,cAAA,eAAbA,cAAA,CAAeK,MAAM,GAAG,EAAE,GAAG,CAAC;UAC1CA,MAAM,EAAEN,IAAI,CAACE,OAAO,CAACI;QACvB,CAAC;MAAA,CAAC,CAAC;MAEH,MAAMC,cAAc,GAAGT,iBAAiB,CAACX,MAAM,CAAEqB,OAAO,IAAKA,OAAO,CAACF,MAAM,CAAC;MAC5ElD,WAAW,CAACmD,cAAc,CAAC;IAC7B,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdE,OAAO,CAACF,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACE3B,OAAA,CAAAE,SAAA;IAAA6D,QAAA,gBACE/D,OAAA,CAACJ,MAAM;MACLoE,KAAK,EAAE,YAAYrD,IAAI,EAAG;MAC1BsD,QAAQ,EAAC,oDAAoD;MAC7D5D,aAAa,EAAEA;IAAc;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eAEFrE,OAAA,CAACP,SAAS;MAAC6E,SAAS,EAAC,4BAA4B;MAAAP,QAAA,gBAC/C/D,OAAA,CAACN,GAAG;QAAC4E,SAAS,EAAC,MAAM;QAAAP,QAAA,eACnB/D,OAAA,CAACL,GAAG;UAAAoE,QAAA,eACF/D,OAAA,CAACF,QAAQ;YAACW,QAAQ,EAAEA;UAAS;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENrE,OAAA,CAACN,GAAG;QAAC4E,SAAS,EAAC,MAAM;QAAAP,QAAA,gBACnB/D,OAAA;UAAIsE,SAAS,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACvC9D,KAAK,CAACyB,GAAG,CAAEC,IAAI,iBACdjC,OAAA,CAACL,GAAG;UAAe4E,EAAE,EAAE,CAAE;UAACD,SAAS,EAAC,MAAM;UAAAP,QAAA,eACxC/D,OAAA,CAACH,iBAAiB;YAChBc,IAAI,EAAEsB,IAAI,CAACtB,IAAK;YAChBwB,WAAW,EAAEF,IAAI,CAACE,WAAY;YAC9BC,UAAU,EAAEH,IAAI,CAACG;UAAW;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC,GALMpC,IAAI,CAACC,EAAE;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAACjE,EAAA,CAnJID,QAAQ;AAAAqE,EAAA,GAARrE,QAAQ;AAqJd,eAAeA,QAAQ;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}