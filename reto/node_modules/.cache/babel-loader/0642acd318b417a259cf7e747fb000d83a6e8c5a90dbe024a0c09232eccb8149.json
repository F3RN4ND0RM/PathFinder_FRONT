{"ast":null,"code":"var _jsxFileName = \"D:\\\\6to Semestre\\\\GithubReact\\\\PathFinder_FRONT\\\\reto\\\\src\\\\Pages\\\\Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Header from \"../components/Header\";\nimport CertificationCard from \"../components/CertificationCard\";\nimport \"../styles/HomePage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [certs, setCerts] = useState([]);\n  const {\n    addNotifications\n  } = useContext(NotificationContext);\n  const name = localStorage.getItem(\"userName\") || \"Usuario\";\n  useEffect(() => {\n    const fetchCertifications = async () => {\n      try {\n        const token = localStorage.getItem(\"authToken\");\n        const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            token: token\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Error en la solicitud\");\n        }\n        const data = await response.json();\n        const certsData = data.certificationsOfEmployee.map(cert => ({\n          id: cert.id,\n          name: cert.name,\n          description: cert.description,\n          expiration: cert.Certinfo.expiration\n        }));\n        setCerts(certsData);\n        const now = new Date();\n        const expiringSoon = certsData.filter(cert => {\n          const expirationDate = new Date(cert.expiration);\n          const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\n          return diffDays <= 7;\n        });\n        if (expiringSoon.length > 0) {\n          const newNotifs = expiringSoon.map(c => `The certification \"${c.name}\" is expiring soon.`);\n          addNotifications(newNotifs);\n        }\n      } catch (error) {\n        console.error(\"Error obteniendo certificaciones:\", error);\n        addNotifications([\"Hubo un error al cargar las certificaciones\"]);\n      }\n    };\n    fetchCertifications();\n  }, [addNotifications]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `Welcome, ${name}`,\n      subtitle: \"Check your notifications and active certifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"homepage-container fade-in\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-3\",\n          children: \"Certifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), certs.map(cert => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(CertificationCard, {\n            name: cert.name,\n            description: cert.description,\n            expiration: cert.expiration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, cert.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"lpAiFI2/Gmo60BuADjaS0iDdcs0=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Container","Row","Col","Header","CertificationCard","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","certs","setCerts","addNotifications","NotificationContext","name","localStorage","getItem","fetchCertifications","token","response","fetch","headers","ok","Error","data","json","certsData","certificationsOfEmployee","map","cert","id","description","expiration","Certinfo","now","Date","expiringSoon","filter","expirationDate","diffDays","length","newNotifs","c","error","console","children","title","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","className","md","_c","$RefreshReg$"],"sources":["D:/6to Semestre/GithubReact/PathFinder_FRONT/reto/src/Pages/Homepage.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../components/Header\";\r\nimport CertificationCard from \"../components/CertificationCard\";\r\n\r\nimport \"../styles/HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  const [certs, setCerts] = useState([]);\r\n  const { addNotifications } = useContext(NotificationContext);\r\n\r\n  const name = localStorage.getItem(\"userName\") || \"Usuario\";\r\n\r\n  useEffect(() => {\r\n    const fetchCertifications = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"authToken\");\r\n\r\n        const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: token,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Error en la solicitud\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const certsData = data.certificationsOfEmployee.map((cert) => ({\r\n          id: cert.id,\r\n          name: cert.name,\r\n          description: cert.description,\r\n          expiration: cert.Certinfo.expiration,\r\n        }));\r\n\r\n        setCerts(certsData);\r\n\r\n        const now = new Date();\r\n        const expiringSoon = certsData.filter((cert) => {\r\n          const expirationDate = new Date(cert.expiration);\r\n          const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\r\n          return diffDays <= 7;\r\n        });\r\n\r\n        if (expiringSoon.length > 0) {\r\n          const newNotifs = expiringSoon.map(\r\n            (c) => `The certification \"${c.name}\" is expiring soon.`\r\n          );\r\n          addNotifications(newNotifs);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error obteniendo certificaciones:\", error);\r\n        addNotifications([\"Hubo un error al cargar las certificaciones\"]);\r\n      }\r\n    };\r\n\r\n    fetchCertifications();\r\n  }, [addNotifications]);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title={`Welcome, ${name}`}\r\n        subtitle=\"Check your notifications and active certifications\"\r\n      />\r\n\r\n      <Container className=\"homepage-container fade-in\">\r\n        <Row className=\"mt-4\">\r\n          <h4 className=\"mb-3\">Certifications</h4>\r\n          {certs.map((cert) => (\r\n            <Col key={cert.id} md={6} className=\"mb-3\">\r\n              <CertificationCard\r\n                name={cert.name}\r\n                description={cert.description}\r\n                expiration={cert.expiration}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}