{"ast":null,"code":"var _jsxFileName = \"D:\\\\6to Semestre\\\\GithubReact\\\\PathFinder_FRONT\\\\reto\\\\src\\\\Pages\\\\Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Header from \"../components/Header\";\nimport CertificationCard from \"../components/CertificationCard\";\nimport \"../styles/HomePage.css\";\nimport { useNotifications } from \"../helpers/NotificationContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [certs, setCerts] = useState([]);\n  const {\n    addNotifications\n  } = useNotifications();\n  const fetchCertifications = useCallback(async () => {\n    try {\n      const token = localStorage.getItem(\"authToken\");\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error en la solicitud\");\n      }\n      const data = await response.json();\n      const certsData = data.certificationsOfEmployee.map(cert => ({\n        id: cert.id,\n        name: cert.name,\n        description: cert.description,\n        expiration: cert.Certinfo.expiration\n      }));\n      setCerts(certsData);\n      const now = new Date();\n      const expiringSoon = certsData.filter(cert => {\n        const expirationDate = new Date(cert.expiration);\n        const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\n        return diffDays <= 7;\n      });\n      if (expiringSoon.length > 0) {\n        const newNotifs = expiringSoon.map(c => `The certification \"${c.name}\" is about to expire`);\n        addNotifications(newNotifs);\n      }\n    } catch (error) {\n      console.error(\"Error obteniendo certificaciones:\", error);\n      addNotifications([\"Error loading certifications\"]);\n    }\n  }, [addNotifications]);\n  useEffect(() => {\n    fetchCertifications();\n  }, [fetchCertifications]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Welcome\",\n      subtitle: \"Check your active certifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4\",\n        children: \"My Certifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: certs.map(cert => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          lg: 4,\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(CertificationCard, {\n            name: cert.name,\n            description: cert.description,\n            expiration: cert.expiration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, cert.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"WIpoF2GFTRzbQlUfPQmJXc02XS4=\", false, function () {\n  return [useNotifications];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Container","Row","Col","Header","CertificationCard","useNotifications","jsxDEV","_jsxDEV","HomePage","_s","certs","setCerts","addNotifications","fetchCertifications","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","certsData","certificationsOfEmployee","map","cert","id","name","description","expiration","Certinfo","now","Date","expiringSoon","filter","expirationDate","diffDays","length","newNotifs","c","error","console","className","children","title","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","md","lg","_c","$RefreshReg$"],"sources":["D:/6to Semestre/GithubReact/PathFinder_FRONT/reto/src/Pages/Homepage.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../components/Header\";\r\nimport CertificationCard from \"../components/CertificationCard\";\r\nimport \"../styles/HomePage.css\";\r\nimport { useNotifications } from \"../helpers/NotificationContext\";\r\n\r\nfunction HomePage() {\r\n  const [certs, setCerts] = useState([]);\r\n  const { addNotifications } = useNotifications();\r\n\r\n  const fetchCertifications = useCallback(async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"authToken\");\r\n\r\n      const response = await fetch(\"https://pathfinder-back-hnoj.onrender.com/employees/certifications\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          token: token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error en la solicitud\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const certsData = data.certificationsOfEmployee.map((cert) => ({\r\n        id: cert.id,\r\n        name: cert.name,\r\n        description: cert.description,\r\n        expiration: cert.Certinfo.expiration,\r\n      }));\r\n\r\n      setCerts(certsData);\r\n\r\n      const now = new Date();\r\n      const expiringSoon = certsData.filter((cert) => {\r\n        const expirationDate = new Date(cert.expiration);\r\n        const diffDays = (expirationDate - now) / (1000 * 60 * 60 * 24);\r\n        return diffDays <= 7;\r\n      });\r\n\r\n      if (expiringSoon.length > 0) {\r\n        const newNotifs = expiringSoon.map(\r\n          (c) => `The certification \"${c.name}\" is about to expire`\r\n        );\r\n        addNotifications(newNotifs);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo certificaciones:\", error);\r\n      addNotifications([\"Error loading certifications\"]);\r\n    }\r\n  }, [addNotifications]);\r\n\r\n  useEffect(() => {\r\n    fetchCertifications();\r\n  }, [fetchCertifications]);\r\n\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <Header \r\n        title=\"Welcome\"\r\n        subtitle=\"Check your active certifications\"\r\n      />\r\n      <Container className=\"mt-4\">\r\n        <h2 className=\"mb-4\">My Certifications</h2>\r\n        <Row>\r\n          {certs.map((cert) => (\r\n            <Col key={cert.id} md={6} lg={4} className=\"mb-4\">\r\n              <CertificationCard\r\n                name={cert.name}\r\n                description={cert.description}\r\n                expiration={cert.expiration}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAO,wBAAwB;AAC/B,SAASC,gBAAgB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEc;EAAiB,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAE/C,MAAMQ,mBAAmB,GAAGd,WAAW,CAAC,YAAY;IAClD,IAAI;MACF,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,EAAE;QACjGC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCL,KAAK,EAAEA;QACT;MACF,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,MAAMC,SAAS,GAAGF,IAAI,CAACG,wBAAwB,CAACC,GAAG,CAAEC,IAAI,KAAM;QAC7DC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,WAAW,EAAEH,IAAI,CAACG,WAAW;QAC7BC,UAAU,EAAEJ,IAAI,CAACK,QAAQ,CAACD;MAC5B,CAAC,CAAC,CAAC;MAEHpB,QAAQ,CAACa,SAAS,CAAC;MAEnB,MAAMS,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,YAAY,GAAGX,SAAS,CAACY,MAAM,CAAET,IAAI,IAAK;QAC9C,MAAMU,cAAc,GAAG,IAAIH,IAAI,CAACP,IAAI,CAACI,UAAU,CAAC;QAChD,MAAMO,QAAQ,GAAG,CAACD,cAAc,GAAGJ,GAAG,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC/D,OAAOK,QAAQ,IAAI,CAAC;MACtB,CAAC,CAAC;MAEF,IAAIH,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMC,SAAS,GAAGL,YAAY,CAACT,GAAG,CAC/Be,CAAC,IAAK,sBAAsBA,CAAC,CAACZ,IAAI,sBACrC,CAAC;QACDjB,gBAAgB,CAAC4B,SAAS,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD9B,gBAAgB,CAAC,CAAC,8BAA8B,CAAC,CAAC;IACpD;EACF,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtBf,SAAS,CAAC,MAAM;IACdgB,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzB,oBACEN,OAAA;IAAKqC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCtC,OAAA,CAACJ,MAAM;MACL2C,KAAK,EAAC,SAAS;MACfC,QAAQ,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF5C,OAAA,CAACP,SAAS;MAAC4C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACzBtC,OAAA;QAAIqC,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C5C,OAAA,CAACN,GAAG;QAAA4C,QAAA,EACDnC,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdpB,OAAA,CAACL,GAAG;UAAekD,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACT,SAAS,EAAC,MAAM;UAAAC,QAAA,eAC/CtC,OAAA,CAACH,iBAAiB;YAChByB,IAAI,EAAEF,IAAI,CAACE,IAAK;YAChBC,WAAW,EAAEH,IAAI,CAACG,WAAY;YAC9BC,UAAU,EAAEJ,IAAI,CAACI;UAAW;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC,GALMxB,IAAI,CAACC,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC1C,EAAA,CA1EQD,QAAQ;EAAA,QAEcH,gBAAgB;AAAA;AAAAiD,EAAA,GAFtC9C,QAAQ;AA4EjB,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}