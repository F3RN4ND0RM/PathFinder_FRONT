{"ast":null,"code":"var _jsxFileName = \"D:\\\\6to Semestre\\\\GithubReact\\\\PathFinder_FRONT\\\\reto\\\\src\\\\components\\\\Notifications.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport \"../styles/Notification.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  notifications\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"modern-notification-container\",\n  children: /*#__PURE__*/_jsxDEV(Card, {\n    className: \"modern-notification-card\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"modern-notification-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"p-0\",\n      children: notifications.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        className: \"modern-notification-list\",\n        children: notifications.map((msg, i) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"modern-notification-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"notification-message\",\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-time\",\n              children: \"Just now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modern-notification-empty\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"check-icon\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No new notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = Notifications;\nNotifications.propTypes = {\n  notifications: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","PropTypes","Card","ListGroup","jsxDEV","_jsxDEV","Notifications","notifications","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","length","variant","map","msg","i","Item","viewBox","d","_c","propTypes","arrayOf","string","isRequired","$RefreshReg$"],"sources":["D:/6to Semestre/GithubReact/PathFinder_FRONT/reto/src/components/Notifications.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport \"../styles/Notification.css\";\r\n\r\nconst Notifications = ({ notifications }) => (\r\n  <div className=\"modern-notification-container\">\r\n    <Card className=\"modern-notification-card\">\r\n      <Card.Header className=\"modern-notification-header\">\r\n      </Card.Header>\r\n\r\n      <Card.Body className=\"p-0\">\r\n        {notifications.length > 0 ? (\r\n          <ListGroup variant=\"flush\" className=\"modern-notification-list\">\r\n            {notifications.map((msg, i) => (\r\n              <ListGroup.Item key={i} className=\"modern-notification-item\">\r\n                <div className=\"notification-indicator\"></div>\r\n                <div className=\"notification-content\">\r\n                  <p className=\"notification-message\">{msg}</p>\r\n                  <span className=\"notification-time\">Just now</span>\r\n                </div>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        ) : (\r\n          <div className=\"modern-notification-empty\">\r\n            <svg className=\"check-icon\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"/>\r\n            </svg>\r\n            <p>No new notifications</p>\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nNotifications.propTypes = {\r\n  notifications: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}